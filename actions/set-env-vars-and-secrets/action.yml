name: 'Endjin.RecommendedPractices.Build.SetEnvVarsAndSecret'
description: 'Injects environment variables and secrets passed as JSON-formatted strings'
inputs:
  environmentVariablesJsonBase64:
    description: A Base64-encoded JSON object representing environment variables that need to be set for the current job.
    default: 'ewB9AA=='   # '{}'
  secretsJsonBase64:
    description: A Base64-encoded JSON object representing secrets that need to be set for the current job.
    default: 'ewB9AA=='   # '{}'

runs:
  using: "composite"
  steps:
  - id: setEnvironmentVariables
    name: Set Environment Variables
    run: |
      $envVarsJson = [System.Text.Encoding]::Unicode.GetString([Convert]::FromBase64String("${{ inputs.environmentVariablesJsonBase64 }}"))
      $envVars = ConvertFrom-Json -Depth 100 -AsHashtable $envVarsJson
      $envVars.Keys | % {
        ('{0}={1}' -f $_, $envVars[$_]) | Out-File -Append -FilePath $env:GITHUB_ENV
      }        
    shell: pwsh
  - id: setSecrets
    name: Set Secrets
    run: |
      $secretsJson = [System.Text.Encoding]::Unicode.GetString([Convert]::FromBase64String("${{ inputs.secretsJsonBase64 }}"))
      $secrets = ConvertFrom-Json -Depth 100 -AsHashtable $secretsJson
      $secrets.Keys | % {
        ('{0}={1}' -f $_, $secrets[$_]) | Out-File -Append -FilePath $env:GITHUB_ENV
        Write-Host ("::add-mask::{0}" -f $secrets[$_])
      }        
    shell: pwsh